---
- name: MetalLB already deployed?
  shell: |
    kubectl get namespace {{ postcluster_metallb_namespace }} --ignore-not-found
  register: metallb_alreadydeployed_check
  ignore_errors: yes
  args:
    executable: /bin/bash
  become: true
  become_user: "{{ become_user_setting }}"
  tags:
    - apps
    - loadbalancer
- block:
    - name: Add Metallb Repo
      kubernetes.core.helm_repository:
        name: "{{ postcluster_metallb_helm_repo_name }}"
        repo_url: "{{ postcluster_metallb_helm_repo_url }}"
      become: true
      become_user: "{{ become_user_setting }}"

    - name: Prep Metallb system config
      shell: 'kubectl get configmap kube-proxy -n kube-system -o yaml | sed -e "s/strictARP: false/strictARP: true/" | kubectl apply -f - -n kube-system'
      become: true
      become_user: "{{ become_user_setting }}"

    - name: Install Metallb
      kubernetes.core.helm:
        name: "{{ postcluster_metallb_helm_chart_name }}"
        namespace: "{{ postcluster_metallb_namespace }}"
        chart_ref: "{{ postcluster_metallb_helm_chart_ref }}"
        create_namespace: true
        wait: true
      become: true
      become_user: "{{ become_user_setting }}"

    - name: Apply Metallb IP address pool A yaml file
      shell: |
        kubectl apply -f - <<EOF
        apiVersion: metallb.io/v1beta1
        kind: IPAddressPool
        metadata:
          name: "{{ postcluster_metallb_ipaddresspool_main_name }}"
          namespace: "{{ postcluster_metallb_namespace }}"
        spec:
          addresses:
          - {{ postcluster_metallb_dhcp_main_start_range }}-{{ postcluster_metallb_dhcp_main_end_range }}
        EOF
      become: true
      become_user: "{{ become_user_setting }}"

    - name: Apply Metallb L2Advertisement A yaml file
      shell: |
        kubectl apply -f - <<EOF
        apiVersion: metallb.io/v1beta1
        kind: L2Advertisement
        metadata:
          name: "{{ postcluster_metallb_l2advertisement_main_name }}"
          namespace: "{{ postcluster_metallb_namespace }}"
        spec:
          ipAddressPools:
          - "{{ postcluster_metallb_ipaddresspool_main_name }}"
        EOF
      become: true
      become_user: "{{ become_user_setting }}"

    - name: Wait for metallb pods to start
      ansible.builtin.pause:
        seconds: 10

    - name: Wait for metallb pods become ready
      become: true
      become_user: "{{ become_user_setting }}"
      ansible.builtin.shell: "kubectl wait --namespace={{ postcluster_metallb_namespace }} --for=condition=Ready pods --selector app.kubernetes.io/name={{ postcluster_metallb_helm_repo_name }} --timeout=600s"

  when: metallb_alreadydeployed_check.stdout == ""
  tags:
    - apps
    - loadbalancer
